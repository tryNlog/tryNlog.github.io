{"version":3,"file":"component---src-pages-index-js-81c7e8b61281653f585f.js","mappings":"uJAuDA,IA5CY,KAAO,IAAD,EAChB,MAiBMA,EAA+B,QAAzB,GAjBCC,EAAAA,EAAAA,gBAAe,cAiBRC,KAAKC,oBAAY,aAAtB,EAAwBH,OAGvC,OACE,uBAAKI,UAAU,QAWZJ,aAAM,EAANA,EAAQK,OACP,yBAAG,cACWL,EAAOK,KAAK,4BACvBL,aAAM,EAANA,EAAQM,UAAW,KAAI,KAIxB,C,8ECnDV,EAAe,IAA0B,0DCuCzC,MAnCe,IAAoC,IAAnC,SAAEC,EAAQ,MAAEC,EAAK,SAAEC,GAAU,EAC3C,MACMC,EAD6B,MAChBH,EAASI,SAC5B,IAAIC,EAmBJ,OAhBEA,EADEF,EAEA,sBAAIN,UAAU,gBACZ,gBAAC,EAAAS,KAAI,CAACC,GAAG,KACP,uBAAKC,IAAKC,EAAaC,IAAI,SAASC,OAAQ,OAOhD,gBAAC,EAAAL,KAAI,CAACT,UAAU,mBAAmBU,GAAG,KACnCN,GAML,uBAAKJ,UAAU,iBAAiB,oBAAmBM,GACjD,0BAAQN,UAAU,iBAAiBQ,GACnC,4BAAOH,GACP,8BAAQ,MACH,IAAIU,MAAOC,cAAc,YAC5B,IACA,qBAAGC,KAAK,8BAA6B,YAEnC,C,+CCcV,IAvCY,IAAuC,IAAD,UAArC,YAAEC,EAAW,MAAEd,EAAK,SAAEC,GAAU,EAC3C,MAAM,KAAEP,IAASD,EAAAA,EAAAA,gBAAe,cAgB1BsB,EAAkBD,GAAepB,EAAKC,aAAamB,YACnDE,EAAgC,QAApB,EAAGtB,EAAKC,oBAAY,aAAjB,EAAmBK,MAExC,OACE,gCACE,6BAAQgB,EAAkBhB,EAAK,MAAMgB,EAAiBhB,GACtD,wBAAMH,KAAK,cAAcoB,QAASF,IAClC,wBAAMG,SAAS,WAAWD,QAASjB,IACnC,wBAAMkB,SAAS,iBAAiBD,QAASF,IACzC,wBAAMG,SAAS,UAAUD,QAAQ,YACjC,wBAAMpB,KAAK,eAAeoB,QAAQ,YAClC,wBACEpB,KAAK,kBACLoB,SAA0B,QAAjB,EAAAvB,EAAKC,oBAAY,OAAQ,QAAR,EAAjB,EAAmBwB,cAAM,WAAR,EAAjB,EAA2BC,UAAO,KAE7C,wBAAMvB,KAAK,gBAAgBoB,QAASjB,IACpC,wBAAMH,KAAK,sBAAsBoB,QAASF,IACzCd,EACA,C,sHCkBP,UAxDkB,IAAyB,IAAD,MAAvB,KAAEoB,EAAI,SAAEtB,GAAU,EACnC,MAAMuB,GAAkC,QAAtB,EAAAD,EAAK3B,KAAKC,oBAAY,aAAtB,EAAwBK,QAAK,QACzCuB,EAAQF,EAAKG,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,gBAAC,IAAM,CAAC3B,SAAUA,EAAUC,MAAOsB,GACjC,gBAAC,IAAG,MACJ,yBAAG,8JAUP,gBAAC,IAAM,CAACvB,SAAUA,EAAUC,MAAOsB,GACjC,gBAAC,IAAG,MACJ,sBAAIK,MAAO,CAAEC,UAAU,SACpBL,EAAMM,KAAIC,IACT,MAAM9B,EAAQ8B,EAAKC,YAAY/B,OAAS8B,EAAKE,OAAOC,KAEpD,OACE,sBAAIC,IAAKJ,EAAKE,OAAOC,MACnB,2BACErC,UAAU,iBACVuC,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAA/B,KAAI,CAACC,GAAIwB,EAAKE,OAAOC,KAAMI,SAAS,OACnC,wBAAMA,SAAS,YAAYrC,KAG/B,6BAAQ8B,EAAKC,YAAYO,OAE3B,+BACE,qBACEC,wBAAyB,CACvBC,OAAQV,EAAKC,YAAYjB,aAAegB,EAAKW,SAE/CJ,SAAS,kBAIZ,KAIJ,EAWN,MAAMK,EAAO,IAAM,gBAAC,IAAG,CAAC1C,MAAM,a","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/images/gatsby-icon.png","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n// import { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  // const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      {/* <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fullWidth\"\n        formats={[\"auto\", \"webp\", \"avif\"]}\n        src=\"../images/profile-pic.png\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      /> */}\n      {author?.name && (\n        <p>\n          Written by {author.name}<br></br>\n          {author?.summary || null}\n          {` `}\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","export default __webpack_public_path__ + \"static/gatsby-icon-f4a8a76bbc8c551fea398534c5e39861.png\";","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport headerImage from '../images/gatsby-icon.png'\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">\n          <img src={headerImage} alt=\"header\" height={70} />\n          {/* {title} */}\n        </Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer>\n        Â© {new Date().getFullYear()}, Made by\n        {` `}\n        <a href=\"https://github.com/tryNlog\">tryNlog</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Bio />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"All posts\" />\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["author","useStaticQuery","site","siteMetadata","className","name","summary","location","title","children","isRootPath","pathname","header","Link","to","src","headerImage","alt","height","Date","getFullYear","href","description","metaDescription","defaultTitle","content","property","social","twitter","data","siteTitle","posts","allMarkdownRemark","nodes","length","style","listStyle","map","post","frontmatter","fields","slug","key","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","excerpt","Head"],"sourceRoot":""}